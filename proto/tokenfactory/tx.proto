syntax = "proto3";
package noble.tokenfactory;

// this line is used by starport scaffolding # proto/tx/import
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "noble/x/tokenfactory/types";

// Msg defines the Msg service.
service Msg {
      rpc ChangeAdmin(MsgChangeAdmin) returns (MsgChangeAdminResponse);
  rpc UpdateMasterMinter(MsgUpdateMasterMinter) returns (MsgUpdateMasterMinterResponse);
  rpc UpdatePauser(MsgUpdatePauser) returns (MsgUpdatePauserResponse);
  rpc UpdateBlacklister(MsgUpdateBlacklister) returns (MsgUpdateBlacklisterResponse);
  rpc UpdateOwner(MsgUpdateOwner) returns (MsgUpdateOwnerResponse);
  rpc ConfigureMinter(MsgConfigureMinter) returns (MsgConfigureMinterResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgChangeAdmin {
  string from = 1;
  string address = 2;
}

message MsgChangeAdminResponse {
}

message MsgUpdateMasterMinter {
  string from = 1;
  string address = 2;
}

message MsgUpdateMasterMinterResponse {
}

message MsgUpdatePauser {
  string from = 1;
  string address = 2;
}

message MsgUpdatePauserResponse {
}

message MsgUpdateBlacklister {
  string from = 1;
  string address = 2;
}

message MsgUpdateBlacklisterResponse {
}

message MsgUpdateOwner {
  string from = 1;
  string address = 2;
}

message MsgUpdateOwnerResponse {
}

message MsgConfigureMinter {
  string from = 1;
  string address = 2;
  cosmos.base.v1beta1.Coin allowance = 3 [(gogoproto.nullable) = false];
}

message MsgConfigureMinterResponse {
}

// this line is used by starport scaffolding # proto/tx/message
